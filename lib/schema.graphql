union GlobalSearch = Course | Student | Monitor

"Valida los tipos de nivel"
enum Level {
    principiante
    intermedio
    avanzado
}

type Course {
    _id: ID! 
    title: String!
    teacher: String
    description: String!
    topic: String @deprecated
    people: [ Student ]
    level: Level 
}

interface Person {
    _id: ID!
    name: String!
    email: String!   
}

type Student implements Person {
    _id: ID!
    name: String!
    email: String!
    avatar: String
}

type Monitor implements Person {
    _id: ID!
    name: String!
    email: String!
    phone: String
}


type Query {
    "Devuelve todos los cursos"
    getCourses: [Course]
    "Devuelve un curso"
    getCourse(id: ID!): Course
    "Devuelve todos los stundents"
    getPeople: [Person]
    "Devuelve un stundent"
    getPerson(id: ID!): Person
    "Ejecuta una busqueda global"
    searchItems(keyword: String!): [ GlobalSearch ]
}

input CourseInput {
    title: String!
    teacher: String
    description: String!
    topic: String
    level: Level
}
input CourseEditInput {
    title: String
    teacher: String
    description: String
    topic: String
}

input PersonInput {
    name: String!
    email: String!
    phone: String
    avatar: String
}
input PersonEditInput {
    name: String
    email: String
    phone: String
    avatar: String
}

type Mutation {
    "Crea un curso"
    createCourse(input: CourseInput!): Course
    "Edita un curso"
    editCourse(_id: ID!,input: CourseEditInput!): Course
    "Crea un persona"
    createPerson(input: PersonInput!): Person
    "Edita un persona"
    editPerson(_id: ID!,input: PersonInput!): Person
    "Agrega una persona a un curso"
    addPeople(courseID: ID!, personID: ID! ): Course
    "Elimina un curso"
    deleteCourse(_id: ID!): Boolean
    "Elimina un estudiante"
    deleteStudent(_id: ID!): Boolean

}